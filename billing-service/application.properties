spring.application.name=billing-service

server.port=8081
server.address=0.0.0.0

spring.datasource.url=jdbc:postgresql://localhost:5432/billingdb
spring.datasource.username=user
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Kafka Broker Configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Consumer Configuration
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=billing-service-group
# Topic Auto-Creation
spring.kafka.admin.auto-create=true
# Eureka
eureka.client.service-url.defaultZone=${SPRING_EUREKA_URL:http://eureka-server:8761/eureka}
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.cloud.netflix.eureka=DEBUG